// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientManagementService.Data;

#nullable disable

namespace PatientManagementService.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    [Migration("20250530175713_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientManagementService.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Patient_Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .HasDatabaseName("IX_Patient_PhoneNumber")
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("FirstName", "LastName")
                        .HasDatabaseName("IX_Patient_FullName");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Address = "123 Main Street, Tashkent, Uzbekistan",
                            CreatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1542),
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@patient.com",
                            FirstName = "John",
                            Gender = 1,
                            LastName = "Doe",
                            MiddleName = "William",
                            PhoneNumber = "+998901234567",
                            UpdatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1544)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Address = "456 Oak Avenue, Tashkent, Uzbekistan",
                            CreatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1545),
                            DateOfBirth = new DateTime(1990, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@patient.com",
                            FirstName = "Jane",
                            Gender = 2,
                            LastName = "Smith",
                            MiddleName = "Elizabeth",
                            PhoneNumber = "+998907654321",
                            UpdatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1546)
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Address = "789 Navoi Street, Tashkent, Uzbekistan",
                            CreatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1547),
                            DateOfBirth = new DateTime(1978, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed.karimov@patient.com",
                            FirstName = "Ahmed",
                            Gender = 1,
                            LastName = "Karimov",
                            PhoneNumber = "+998901111111",
                            UpdatedAt = new DateTime(2025, 5, 30, 17, 57, 13, 528, DateTimeKind.Utc).AddTicks(1547)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
