// <auto-generated />
using System;
using ClinicalRecordService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicalRecordService.Migrations
{
    [DbContext(typeof(ClinicalRecordDbContext))]
    [Migration("20250530193233_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClinicalRecordService.Models.ClinicalEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecordedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("EntryDateTime")
                        .HasDatabaseName("IX_ClinicalEntry_EntryDateTime");

                    b.HasIndex("EntryType")
                        .HasDatabaseName("IX_ClinicalEntry_EntryType");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("IX_ClinicalEntry_PatientId");

                    b.HasIndex("PatientId", "EntryDateTime")
                        .HasDatabaseName("IX_ClinicalEntry_PatientId_EntryDateTime");

                    b.HasIndex("PatientId", "EntryType")
                        .HasDatabaseName("IX_ClinicalEntry_PatientId_EntryType");

                    b.ToTable("ClinicalEntries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce91585b-7e32-41a5-bce6-bc9dc5191d7f"),
                            CreatedAt = new DateTime(2025, 5, 23, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7257),
                            Data = "{\"Temperature\":36.8,\"BloodPressure\":\"120/80\",\"HeartRate\":72,\"RespiratoryRate\":16}",
                            EntryDateTime = new DateTime(2025, 5, 23, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7013),
                            EntryType = 1,
                            Notes = "Morning vital signs check",
                            PatientId = new Guid("11111111-1111-1111-1111-111111111111"),
                            RecordedBy = "Nurse Jane Smith",
                            UpdatedAt = new DateTime(2025, 5, 23, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7258)
                        },
                        new
                        {
                            Id = new Guid("49ce7e46-b156-4711-be10-7bcc60491ac6"),
                            CreatedAt = new DateTime(2025, 5, 24, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7294),
                            Data = "{\"Severity\":\"Mild\",\"Location\":\"Frontal\",\"Duration\":\"2 hours\"}",
                            EntryDateTime = new DateTime(2025, 5, 24, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7261),
                            EntryType = 2,
                            Notes = "Patient reports mild headache",
                            PatientId = new Guid("11111111-1111-1111-1111-111111111111"),
                            RecordedBy = "Patient Self-Report",
                            UpdatedAt = new DateTime(2025, 5, 24, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7294)
                        },
                        new
                        {
                            Id = new Guid("d338f04f-d856-4192-870a-77c3a070c59f"),
                            CreatedAt = new DateTime(2025, 5, 25, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7333),
                            Data = "{\"MedicationName\":\"Paracetamol\",\"Dosage\":\"500mg\",\"Frequency\":\"Every 6 hours\",\"Duration\":\"3 days\"}",
                            EntryDateTime = new DateTime(2025, 5, 25, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7296),
                            EntryType = 4,
                            Notes = "Prescribed paracetamol for headache relief",
                            PatientId = new Guid("11111111-1111-1111-1111-111111111111"),
                            RecordedBy = "Dr. Michael Johnson",
                            UpdatedAt = new DateTime(2025, 5, 25, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7334)
                        },
                        new
                        {
                            Id = new Guid("767fa5dc-e9df-42b7-a99e-6421f3970700"),
                            CreatedAt = new DateTime(2025, 5, 26, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7393),
                            Data = "{\"Temperature\":37.2,\"BloodPressure\":\"130/85\",\"HeartRate\":88,\"RespiratoryRate\":18}",
                            EntryDateTime = new DateTime(2025, 5, 26, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7336),
                            EntryType = 1,
                            Notes = "Post-surgery vital signs monitoring",
                            PatientId = new Guid("22222222-2222-2222-2222-222222222222"),
                            RecordedBy = "Nurse John Wilson",
                            UpdatedAt = new DateTime(2025, 5, 26, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7394)
                        },
                        new
                        {
                            Id = new Guid("d2e02c90-6568-4d00-81b1-7ddb9a03a48a"),
                            CreatedAt = new DateTime(2025, 5, 27, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7434),
                            Data = "{\"TestType\":\"Complete Blood Count\",\"Hemoglobin\":\"12.5 g/dL\",\"WhiteBloodCells\":\"7200/µL\",\"Status\":\"Normal\"}",
                            EntryDateTime = new DateTime(2025, 5, 27, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7395),
                            EntryType = 6,
                            Notes = "Blood test results",
                            PatientId = new Guid("22222222-2222-2222-2222-222222222222"),
                            RecordedBy = "Lab Technician Sarah",
                            UpdatedAt = new DateTime(2025, 5, 27, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7435)
                        },
                        new
                        {
                            Id = new Guid("f2b166ab-7962-43e7-bd77-473c02759bd0"),
                            CreatedAt = new DateTime(2025, 5, 28, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7494),
                            Data = "{\"PrimaryDiagnosis\":\"Hypertension\",\"SecondaryDiagnosis\":\"Type 2 Diabetes\",\"Confidence\":\"High\"}",
                            EntryDateTime = new DateTime(2025, 5, 28, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7458),
                            EntryType = 8,
                            Notes = "Initial diagnosis based on symptoms and examination",
                            PatientId = new Guid("33333333-3333-3333-3333-333333333333"),
                            RecordedBy = "Dr. Michael Johnson",
                            UpdatedAt = new DateTime(2025, 5, 28, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7495)
                        },
                        new
                        {
                            Id = new Guid("1307b246-b93c-431b-b0a4-ae4794bd806c"),
                            CreatedAt = new DateTime(2025, 5, 29, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7582),
                            Data = "{\"TreatmentPlan\":\"Lifestyle modification and medication\",\"Medications\":[\"Metformin 500mg\",\"Lisinopril 10mg\"],\"FollowUp\":\"2 weeks\"}",
                            EntryDateTime = new DateTime(2025, 5, 29, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7497),
                            EntryType = 9,
                            Notes = "Treatment plan for hypertension and diabetes",
                            PatientId = new Guid("33333333-3333-3333-3333-333333333333"),
                            RecordedBy = "Dr. Michael Johnson",
                            UpdatedAt = new DateTime(2025, 5, 29, 19, 32, 33, 234, DateTimeKind.Utc).AddTicks(7583)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
