// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RehabilitationService.Data;

#nullable disable

namespace RehabilitationService.Migrations
{
    [DbContext(typeof(RehabilitationDbContext))]
    partial class RehabilitationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AssignedTherapist")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedDurationWeeks")
                        .HasColumnType("int");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PlanType")
                        .HasColumnType("int");

                    b.Property<string>("SpecialInstructions")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("IX_RehabilitationPlan_PatientId");

                    b.HasIndex("PlanType")
                        .HasDatabaseName("IX_RehabilitationPlan_PlanType");

                    b.HasIndex("StartDate")
                        .HasDatabaseName("IX_RehabilitationPlan_StartDate");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_RehabilitationPlan_Status");

                    b.HasIndex("PatientId", "Status")
                        .HasDatabaseName("IX_RehabilitationPlan_PatientId_Status");

                    b.ToTable("RehabilitationPlans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d0c07df-b39e-4f31-b9e0-981cab09847d"),
                            AssignedTherapist = "Dr. Sarah Wilson",
                            CreatedAt = new DateTime(2025, 4, 30, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8531),
                            CreatedBy = "Dr. Michael Johnson",
                            Description = "Comprehensive cardiac rehabilitation program following heart surgery",
                            Difficulty = 2,
                            EndDate = new DateTime(2025, 7, 29, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8526),
                            EstimatedDurationWeeks = 12,
                            Goals = "Improve cardiovascular fitness, reduce risk factors, and enhance quality of life. Target: 30 minutes of moderate exercise 5 days per week.",
                            PatientId = new Guid("11111111-1111-1111-1111-111111111111"),
                            PlanName = "Post-Surgery Cardiac Rehabilitation",
                            PlanType = 4,
                            SpecialInstructions = "Monitor heart rate during exercise. Stop if chest pain occurs.",
                            StartDate = new DateTime(2025, 4, 30, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8522),
                            Status = 2,
                            UpdatedAt = new DateTime(2025, 4, 30, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8532)
                        },
                        new
                        {
                            Id = new Guid("c9e0248d-ab11-44a6-bb71-fdf481389a74"),
                            AssignedTherapist = "Lisa Rodriguez, PT",
                            CreatedAt = new DateTime(2025, 5, 16, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8537),
                            CreatedBy = "Dr. Michael Johnson",
                            Description = "Physical therapy program for knee replacement surgery recovery",
                            Difficulty = 1,
                            EndDate = new DateTime(2025, 8, 13, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8536),
                            EstimatedDurationWeeks = 16,
                            Goals = "Restore knee function, improve mobility, and strengthen leg muscles. Target: Full range of motion and ability to walk without assistance.",
                            PatientId = new Guid("22222222-2222-2222-2222-222222222222"),
                            PlanName = "Knee Replacement Recovery Program",
                            PlanType = 6,
                            SpecialInstructions = "Ice after exercises. No weight bearing beyond doctor's orders.",
                            StartDate = new DateTime(2025, 5, 16, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8535),
                            Status = 2,
                            UpdatedAt = new DateTime(2025, 5, 16, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8538)
                        },
                        new
                        {
                            Id = new Guid("a2fda7cc-39c6-4f52-83df-2f758abed603"),
                            AssignedTherapist = "Maria Garcia, SLP",
                            CreatedAt = new DateTime(2025, 4, 15, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8541),
                            CreatedBy = "Dr. Michael Johnson",
                            Description = "Comprehensive rehabilitation for stroke recovery focusing on speech and motor skills",
                            Difficulty = 3,
                            EndDate = new DateTime(2025, 10, 12, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8540),
                            EstimatedDurationWeeks = 24,
                            Goals = "Improve speech clarity, restore fine motor skills, and enhance cognitive function. Target: Independent daily living activities.",
                            PatientId = new Guid("33333333-3333-3333-3333-333333333333"),
                            PlanName = "Stroke Recovery - Speech and Motor Skills",
                            PlanType = 5,
                            SpecialInstructions = "Family involvement encouraged. Progress may be gradual.",
                            StartDate = new DateTime(2025, 4, 15, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8539),
                            Status = 2,
                            UpdatedAt = new DateTime(2025, 4, 15, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8541)
                        });
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationProgressLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Achievements")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ActivityDetails")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Challenges")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CompletionStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("EnergyLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MoodLevel")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("PainLevel")
                        .HasColumnType("int");

                    b.Property<int>("ProgressType")
                        .HasColumnType("int");

                    b.Property<Guid>("RehabilitationPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubmittedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TherapistNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("CompletionStatus")
                        .HasDatabaseName("IX_RehabilitationProgressLog_CompletionStatus");

                    b.HasIndex("LogDate")
                        .HasDatabaseName("IX_RehabilitationProgressLog_LogDate");

                    b.HasIndex("ProgressType")
                        .HasDatabaseName("IX_RehabilitationProgressLog_ProgressType");

                    b.HasIndex("RehabilitationPlanId")
                        .HasDatabaseName("IX_RehabilitationProgressLog_RehabilitationPlanId");

                    b.ToTable("RehabilitationProgressLogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b45fd2f0-7eab-4ec2-900f-2db17a9e940a"),
                            Achievements = "Increased duration by 5 minutes from last session",
                            ActivityDetails = "Treadmill walking: 25 minutes at 3.0 mph, incline 2%",
                            CompletionStatus = 3,
                            CreatedAt = new DateTime(2025, 5, 25, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8547),
                            DurationMinutes = 25,
                            EnergyLevel = 7,
                            LogDate = new DateTime(2025, 5, 25, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8544),
                            MoodLevel = 8,
                            Notes = "Completed 25 minutes of walking on treadmill. Heart rate remained stable.",
                            PainLevel = 2,
                            ProgressType = 1,
                            RehabilitationPlanId = new Guid("1d0c07df-b39e-4f31-b9e0-981cab09847d"),
                            SubmittedBy = "Patient Self-Report",
                            UpdatedAt = new DateTime(2025, 5, 25, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8548)
                        },
                        new
                        {
                            Id = new Guid("b077a3ea-cebe-4bfe-bd18-e2751ad4ba11"),
                            Achievements = "Completed all exercises without difficulty",
                            ActivityDetails = "Upper body strength exercises, 15 reps x 3 sets each",
                            CompletionStatus = 3,
                            CreatedAt = new DateTime(2025, 5, 28, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8554),
                            DurationMinutes = 45,
                            EnergyLevel = 8,
                            LogDate = new DateTime(2025, 5, 28, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8552),
                            MoodLevel = 9,
                            Notes = "Therapy session focused on strength training and education",
                            PainLevel = 1,
                            ProgressType = 2,
                            RehabilitationPlanId = new Guid("1d0c07df-b39e-4f31-b9e0-981cab09847d"),
                            SubmittedBy = "Dr. Sarah Wilson",
                            TherapistNotes = "Patient showing excellent progress. Ready to advance to next level.",
                            UpdatedAt = new DateTime(2025, 5, 28, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8555)
                        },
                        new
                        {
                            Id = new Guid("052f3d90-7d78-4d12-b56f-91d3e73e55ec"),
                            Achievements = "Achieved 90-degree flexion for first time",
                            ActivityDetails = "Knee flexion exercises: achieved 90 degrees. Quadriceps strengthening.",
                            Challenges = "Morning stiffness limiting initial range of motion",
                            CompletionStatus = 3,
                            CreatedAt = new DateTime(2025, 5, 27, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8570),
                            DurationMinutes = 30,
                            EnergyLevel = 6,
                            LogDate = new DateTime(2025, 5, 27, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8568),
                            MoodLevel = 7,
                            Notes = "Range of motion exercises. Some stiffness noted in the morning.",
                            PainLevel = 4,
                            ProgressType = 2,
                            RehabilitationPlanId = new Guid("c9e0248d-ab11-44a6-bb71-fdf481389a74"),
                            SubmittedBy = "Lisa Rodriguez, PT",
                            TherapistNotes = "Good progress. Continue current exercises, add balance training next week.",
                            UpdatedAt = new DateTime(2025, 5, 27, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8570)
                        },
                        new
                        {
                            Id = new Guid("21ff1944-ff23-4c67-9163-448c0a4f7342"),
                            Achievements = "Improvement in single word clarity",
                            ActivityDetails = "Speech exercises: 20 minutes articulation, 15 minutes word games",
                            Challenges = "Difficulty with complex sentences, some frustration noted",
                            CompletionStatus = 3,
                            CreatedAt = new DateTime(2025, 5, 29, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8574),
                            DurationMinutes = 35,
                            EnergyLevel = 5,
                            LogDate = new DateTime(2025, 5, 29, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8572),
                            MoodLevel = 6,
                            Notes = "Speech therapy session. Working on articulation and word retrieval.",
                            ProgressType = 2,
                            RehabilitationPlanId = new Guid("a2fda7cc-39c6-4f52-83df-2f758abed603"),
                            SubmittedBy = "Maria Garcia, SLP",
                            TherapistNotes = "Steady progress. Family reports better communication at home.",
                            UpdatedAt = new DateTime(2025, 5, 29, 22, 53, 1, 162, DateTimeKind.Utc).AddTicks(8574)
                        });
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationProgressLog", b =>
                {
                    b.HasOne("RehabilitationService.Models.RehabilitationPlan", "RehabilitationPlan")
                        .WithMany("ProgressLogs")
                        .HasForeignKey("RehabilitationPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RehabilitationPlan");
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationPlan", b =>
                {
                    b.Navigation("ProgressLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
